extensions:
- keyString: "c"
- keyString: "h"
- keyString: "m"
- keyString: "mm"
- keyString: "cpp"
- keyString: "cc"
outlineMenu:
- beginString: "#define\\W(.*)$"
  italic: true
- beginString: "#endif\\W(.*)$"
  italic: true
- beginString: "#if\\W(.*)$"
  italic: true
- beginString: "#ifdef\\W(.*)$"
  italic: true
- beginString: "#ifndef\\W(.*)$"
  italic: true
- beginString: "#pragma mark\\W[\\t ]*([^-\\n]+)$"
  keyString: "$1"
  bold: true
- beginString: "#pragma mark\\W[\\t ]*-[ ]*$"
  keyString: "-"
- beginString: "#undef\\W(.*)$"
  italic: true
- beginString: "\\@end\\W(.*)$"
  bold: true
- beginString: "\\@implementation\\W(.*)$"
  bold: true
- beginString: "\\@interface\\W(.*)$"
  bold: true
- beginString: "^(\\w[\\w\\s]*\\s[\\*]*)(\\w+)\\(([\\s\\w*&,]*)\\)\\s*\\{"
  keyString: "$1 $2($3)"
- beginString: "^[\\t ]*([+-])([^)]*?\\))([^{]*)\\{"
  keyString: "$1 $3"
commands:
- beginString: "and"
- beginString: "and_eq"
- beginString: "bitand"
- beginString: "bitor"
- beginString: "break"
- beginString: "compl"
- beginString: "const_cast"
- beginString: "continue"
- beginString: "delete"
- beginString: "dynamic_cast"
- beginString: "goto"
- beginString: "new"
- beginString: "not"
- beginString: "not_eq"
- beginString: "or"
- beginString: "or_eq"
- beginString: "reinterpret_cast"
- beginString: "return"
- beginString: "static_cast"
- beginString: "throw"
- beginString: "typeid"
- beginString: "xor"
- beginString: "xor_eq"
attributes:
- beginString: "@autoreleasepool"
- beginString: "@catch"
- beginString: "@class"
- beginString: "@defs"
- beginString: "@encode"
- beginString: "@end"
- beginString: "@finally"
- beginString: "@implementation"
- beginString: "@import"
- beginString: "@interface"
- beginString: "@private"
- beginString: "@property"
- beginString: "@protected"
- beginString: "@protocol"
- beginString: "@public"
- beginString: "@selector"
- beginString: "@synchronized"
- beginString: "@synthesize"
- beginString: "@throw"
- beginString: "@try"
metadata:
  author: "Hiroto Sakai"
  distributionURL: "http://coteditor.com"
  version: "2.0"
  description: "Maintained by CotEditor Project."
  license: "Same as CotEditor"
  lastModified: "2014-09-24"
characters:
- beginString: "'"
  endString: "'"
comments: []
values:
- beginString: "false"
- beginString: "nil"
- beginString: "Nil"
- beginString: "NO"
- beginString: "NULL"
- beginString: "true"
- beginString: "YES"
variables:
- beginString: "self"
- beginString: "super"
- beginString: "this"
numbers:
- beginString: "\\b0x[0-9a-f]+l?\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b\\d+(\\.\\d+)?(e[-+]?\\d+)?\\b"
  ignoreCase: true
  regularExpression: true
strings:
- beginString: "\""
  endString: "\""
- beginString: "@\""
  endString: "\""
keywords:
- beginString: "#define"
- beginString: "#elif"
- beginString: "#else"
- beginString: "#endif"
- beginString: "#if"
- beginString: "#ifdef"
- beginString: "#ifndef"
- beginString: "#import"
- beginString: "#include"
- beginString: "#pragma"
- beginString: "asm"
- beginString: "auto"
- beginString: "BOOL"
- beginString: "bool"
- beginString: "bycopy"
- beginString: "byref"
- beginString: "case"
- beginString: "catch"
- beginString: "char"
- beginString: "class"
- beginString: "Class"
- beginString: "const"
- beginString: "default"
- beginString: "defined"
- beginString: "do"
- beginString: "double"
- beginString: "else"
- beginString: "enum"
- beginString: "explicit"
- beginString: "export"
- beginString: "extern"
- beginString: "float"
- beginString: "for"
- beginString: "friend"
- beginString: "id"
- beginString: "if"
- beginString: "IMP"
- beginString: "in"
- beginString: "inline"
- beginString: "inout"
- beginString: "int"
- beginString: "long"
- beginString: "mutable"
- beginString: "namespace"
- beginString: "oneway"
- beginString: "operator"
- beginString: "out"
- beginString: "private"
- beginString: "protected"
- beginString: "public"
- beginString: "register"
- beginString: "restrict"
- beginString: "SEL"
- beginString: "short"
- beginString: "signed"
- beginString: "static"
- beginString: "struct"
- beginString: "switch"
- beginString: "template"
- beginString: "try"
- beginString: "typedef"
- beginString: "typename"
- beginString: "union"
- beginString: "unsigned"
- beginString: "using"
- beginString: "virtual"
- beginString: "void"
- beginString: "volatile"
- beginString: "while"
commentDelimiters:
  endDelimiter: "*/"
  beginDelimiter: "/*"
  inlineDelimiter: "//"
