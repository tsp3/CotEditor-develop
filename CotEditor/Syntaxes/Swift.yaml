extensions:
- keyString: "swift"
outlineMenu:
- beginString: "//[ \\t]*(MARK:|TODO:|FIXME)[ \\t](.+)"
  keyString: "$2"
  bold: true
- beginString: "^([ \\t]*)(@IBAction )?(override )?((?:public|internal|private)
    )?(class )?func[ \\t]*(\\w*)\\((.*)\\)"
  keyString: "$1$2$3$4$5func $6($7)"
- beginString: "^([ \\t]*)(final )?class[ \\t]+(\\w+)(?=[\\s:][^\\w])"
  keyString: "$1$2class $3"
  bold: true
- beginString: "^([ \\t]*)(override )?(class )?var[ \\t]*(\\w*)(?=[ \\t]*:[ \\t]*\\w*\\s*\\{)"
  keyString: "$1$2$3var $4"
- beginString: "^([ \\t]*)(override )?init[\\t ]*\\((.*)\\)"
  keyString: "$1$2init($3)"
- beginString: "^([ \\t]*)enum[ \\t]+(\\w+)"
  keyString: "$1enum $2"
- beginString: "^([ \\t]*)extension[ \\t]+(\\w+)"
  keyString: "$1extension $2"
  bold: true
  italic: true
- beginString: "^([ \\t]*)protocol[ \\t]+(\\w+)"
  keyString: "$1protocol $2"
  italic: true
- beginString: "^([ \\t]*)struct[ \\t]+(\\w+)"
  keyString: "$1struct $2"
completions: []
attributes:
- beginString: "@autoclosure"
- beginString: "@exported"
- beginString: "@IBAction"
- beginString: "@IBDesignable"
- beginString: "@IBInspectable"
- beginString: "@IBOutlet"
- beginString: "@noreturn"
- beginString: "@NSCopying"
- beginString: "@NSManaged"
- beginString: "@objc"
- beginString: "@optional"
- beginString: "@required"
metadata:
  author: "1024jp"
  distributionURL: "http://coteditor.com"
  version: "1.1"
  description: "Based on Swift beta5."
  license: "Same as CotEditor"
  lastModified: "2014-09-24"
characters:
- beginString: "'"
  endString: "'"
- beginString: "\\bU+[0-9a-fA-F]{4,5}\\b"
  regularExpression: true
comments: []
values:
- beginString: "false"
- beginString: "nil"
- beginString: "true"
types:
- beginString: "Any"
- beginString: "AnyClass"
- beginString: "AnyObject"
- beginString: "Array"
- beginString: "Bool"
- beginString: "Boolean"
- beginString: "CDouble"
- beginString: "CFloat"
- beginString: "Character"
- beginString: "CInt"
- beginString: "CLong"
- beginString: "CLongLong"
- beginString: "CShort"
- beginString: "Dictionary"
- beginString: "Double"
- beginString: "Float"
- beginString: "ImplicitlyUnwrappedOptional"
- beginString: "Int"
- beginString: "Int16"
- beginString: "Int32"
- beginString: "Int8"
- beginString: "NSErrorPointer"
- beginString: "ObjCBool"
- beginString: "Optional"
- beginString: "String"
- beginString: "UInt"
- beginString: "UInt16"
- beginString: "UInt32"
- beginString: "UInt8"
- beginString: "UnsafeBufferPointer"
- beginString: "UnsafeMutableBufferPointer"
- beginString: "UnsafeMutablePointer"
- beginString: "UnsafePointer"
- beginString: "Void"
numbers:
- beginString: "(?<![0-9a-z_])[-+]?([0-9][0-9._]*|\\.[0-9][0-9_]*)(e-?[0-9._]+)?\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b0b[01][01_]*\\b"
  regularExpression: true
- beginString: "\\b0o[0-7][0-7_]*\\b"
  regularExpression: true
- beginString: "\\b0x[0-9a-fA-F][0-9a-fA-F_]*([pP]-?[0-9a-fA-F_]+)?\\b"
  regularExpression: true
strings:
- beginString: "\""
  endString: "\""
keywords:
- beginString: "_"
- beginString: "__COLUMN__"
- beginString: "__FILE__"
- beginString: "__FUNCTION__"
- beginString: "__LINE__"
- beginString: "as"
- beginString: "associativity"
- beginString: "break"
- beginString: "case"
- beginString: "class"
- beginString: "continue"
- beginString: "default"
- beginString: "deinit"
- beginString: "didSet"
- beginString: "do"
- beginString: "dynamic"
- beginString: "dynamicType"
- beginString: "enum"
- beginString: "extension"
- beginString: "fallthrough"
- beginString: "final"
- beginString: "for"
- beginString: "func"
- beginString: "get"
- beginString: "if"
- beginString: "import"
- beginString: "in"
- beginString: "infix"
- beginString: "init"
- beginString: "inout"
- beginString: "internal"
- beginString: "is"
- beginString: "lazy"
- beginString: "left"
- beginString: "let"
- beginString: "mutating"
- beginString: "new"
- beginString: "none"
- beginString: "nonmutating"
- beginString: "operator"
- beginString: "override"
- beginString: "postfix"
- beginString: "precedence"
- beginString: "prefix"
- beginString: "private"
- beginString: "protocol"
- beginString: "public"
- beginString: "return"
- beginString: "right"
- beginString: "Self"
- beginString: "set"
- beginString: "static"
- beginString: "struct"
- beginString: "subscript"
- beginString: "switch"
- beginString: "Type"
- beginString: "typealias"
- beginString: "unowned"
- beginString: "var"
- beginString: "weak"
- beginString: "where"
- beginString: "while"
- beginString: "willSet"
variables:
- beginString: "$\\d\\b"
  regularExpression: true
- beginString: "newValue"
- beginString: "self"
- beginString: "super"
commentDelimiters:
  endDelimiter: "*/"
  beginDelimiter: "/*"
  inlineDelimiter: "//"
